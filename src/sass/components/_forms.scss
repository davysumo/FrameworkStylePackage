.has-error {
  .form-control {
    background: $white;
    border-color: $form-feedback-invalid-color;
    box-shadow: none;

    &:focus {
      border-color: $form-feedback-invalid-color;
      box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 6px rgba($form-feedback-invalid-color, .6);
    }
  }

  .form-control-feedback {
    color: $form-feedback-invalid-color;
  }

  .checkbox,
  .control-label {
    color: $form-feedback-invalid-color;
  }
}

.has-warning {
  .form-control {
    border-color: theme-color('warning');
    box-shadow: none;

    &:focus {
      border-color: theme-color('warning');
      box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 6px rgba(theme-color('warning'), .6);
    }
  }

  .form-control-feedback {
    color: theme-color('warning');
  }

  .checkbox,
  .control-label {
    color: theme-color('warning');
  }
}

.has-success {
  .form-control {
    border-color: $form-feedback-valid-color;

    &:focus {
      border-color: $form-feedback-valid-color;
      box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 6px rgba($form-feedback-valid-color, .6);
    }
  }

  .form-control-feedback {
    color: $form-feedback-valid-color;
  }

  .checkbox,
  .control-label {
    color: $form-feedback-valid-color;
  }

  .input-group-addon {
    border-color: $form-feedback-valid-color;
    color: $white;
  }
}

.control-group abbr[title],
.form-group abbr[title] {
  border-bottom: 0;
  color: $primary;
  margin-left: 5px;
}

.input-group .input-group-addon:before {
  padding: 0 0 5px 0;
}

.form-inline {
  .control-label {
    margin-right: 5px;
  }

  .form-control {
    margin-right: 10px;
  }

  .input-group {
    margin-bottom: 0;
  }
}

.datetime-widget select[size], .time-widget select[size] {
  height: 34px;
}

.date-widget .faked-button {
  color: #555;
}

label {

  &:not(.custom-control-label):not(.form-check-label) {
    font-weight: $font-weight-bold;
  }

  abbr[title] {
    border: 0;
    text-decoration: none;
  }
}

.form-control:disabled,
.form-control[readonly] {
  color: $input-disabled-color;
}

.datetime-widget select[size], .time-widget select[size] {
  height: 34px;
}

.date-widget .faked-button {
  color: #555;
}

.popover {
  max-width: none;
  width: 250px;
}

select {
  background-image: url('data:image/svg+xml;utf8,<?xml version="1.0" encoding="utf-8"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg xmlns="http://www.w3.org/2000/svg" width="14" height="12" version="1"><path d="M4 8L0 4h8z"/></svg>');
  background-position: right 50%;
  background-repeat: no-repeat;
  -moz-appearance: none;
  padding-right: 1.5rem;
  -webkit-appearance: none;
}

input[type="file"] {
  cursor: pointer;
}

.custom-file ~ .invalid-feedback {
  display: block;
}

@include media-breakpoint-up(md) {

  .popover {
    width: 300px;
  }
}

// Feedback states
.has-success .help-block {
  color: $form-feedback-valid-color;
}
.has-warning .help-block {
  color: $warning;
}
.has-error .help-block {
  color: $form-feedback-invalid-color;
}

.label-optional {
  color: $text-muted;
}

.custom-switch .custom-control-input:checked ~ .custom-control-label::after {
  background-color: color-contrast($custom-control-indicator-checked-bg);
}

.custom-control.custom-switch {
  padding-left: $custom-switch-width + $custom-control-gutter;
}

.dark-mode-switch.custom-switch {
  padding-left: 0;
  padding-right: $custom-switch-width + $custom-control-gutter;

  .custom-control-label {
    font-weight: $font-weight-base;
    width: 100%;

    &::before {
      left: initial;
      right: -$custom-switch-width - $custom-control-gutter;
    }
    &::after {
      left: initial;
      right: calc(-#{$custom-switch-width} + #{$custom-control-gutter} - #{$custom-control-indicator-border-width} * 2);
    }
  }
}
